/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/courses/": {
    /** Get Courses */
    get: operations["get_courses_api_courses__get"];
    /** Create Course */
    post: operations["create_course_api_courses__post"];
  };
  "/api/courses/{course_id}": {
    /** Get Course */
    get: operations["get_course_api_courses__course_id__get"];
    /** Delete Course */
    delete: operations["delete_course_api_courses__course_id__delete"];
    /** Patch Course */
    patch: operations["patch_course_api_courses__course_id__patch"];
  };
  "/api/auth/token": {
    /** Login For Access Token */
    post: operations["login_for_access_token_api_auth_token_post"];
  };
  "/api/users/me": {
    /** Get Users Me */
    get: operations["get_users_me_api_users_me_get"];
  };
  "/api/users": {
    /** Get Users */
    get: operations["get_users_api_users_get"];
    /** Create User */
    post: operations["create_user_api_users_post"];
  };
  "/api/users/{user_id}": {
    /** Get User */
    get: operations["get_user_api_users__user_id__get"];
    /** Patch User */
    patch: operations["patch_user_api_users__user_id__patch"];
  };
  "/api/users/{teacher_id}/assigned_interns": {
    /** Get Assigned Interns */
    get: operations["get_assigned_interns_api_users__teacher_id__assigned_interns_get"];
    /** Assign Interns */
    put: operations["assign_interns_api_users__teacher_id__assigned_interns_put"];
  };
  "/api/users/{teacher_id}/assigned_interns/{intern_id}": {
    /** Get One Assigned Intern */
    get: operations["get_one_assigned_intern_api_users__teacher_id__assigned_interns__intern_id__get"];
  };
  "/api/users/{intern_id}": {
    /** Unassign Intern */
    delete: operations["unassign_intern_api_users__intern_id__delete"];
  };
  "/api/users/{teacher_id}/suitable_for_assign_interns": {
    /** Get Suitable For Assign Interns */
    get: operations["get_suitable_for_assign_interns_api_users__teacher_id__suitable_for_assign_interns_get"];
  };
  "/api/user/{user_id}/courses/": {
    /** Get User Courses */
    get: operations["get_user_courses_api_user__user_id__courses__get"];
    /** Create User Course */
    post: operations["create_user_course_api_user__user_id__courses__post"];
  };
  "/api/user/{user_id}/courses/{course_id}": {
    /** Get One User Course */
    get: operations["get_one_user_course_api_user__user_id__courses__course_id__get"];
    /** Delete User Course */
    delete: operations["delete_user_course_api_user__user_id__courses__course_id__delete"];
  };
  "/api/courses/{course_id}/topics/": {
    /** Get Topics */
    get: operations["get_topics_api_courses__course_id__topics__get"];
    /** Create Topic */
    post: operations["create_topic_api_courses__course_id__topics__post"];
  };
  "/api/courses/{course_id}/topics/{topic_id}": {
    /** Get Topic */
    get: operations["get_topic_api_courses__course_id__topics__topic_id__get"];
    /** Delete Topic */
    delete: operations["delete_topic_api_courses__course_id__topics__topic_id__delete"];
    /** Patch Topic */
    patch: operations["patch_topic_api_courses__course_id__topics__topic_id__patch"];
  };
  "/api/courses/{course_id}/topics/{topic_id}/tasks/": {
    /** Get Tasks */
    get: operations["get_tasks_api_courses__course_id__topics__topic_id__tasks__get"];
    /** Create Task */
    post: operations["create_task_api_courses__course_id__topics__topic_id__tasks__post"];
  };
  "/api/courses/{course_id}/topics/{topic_id}/tasks/{task_id}": {
    /** Get Task */
    get: operations["get_task_api_courses__course_id__topics__topic_id__tasks__task_id__get"];
    /** Delete Task */
    delete: operations["delete_task_api_courses__course_id__topics__topic_id__tasks__task_id__delete"];
    /** Patch Task */
    patch: operations["patch_task_api_courses__course_id__topics__topic_id__tasks__task_id__patch"];
  };
  "/api/courses/{course_id}/topics/{topic_id}/tasks/{task_id}/answers/": {
    /** Get Answers */
    get: operations["get_answers_api_courses__course_id__topics__topic_id__tasks__task_id__answers__get"];
    /** Create Answer */
    post: operations["create_answer_api_courses__course_id__topics__topic_id__tasks__task_id__answers__post"];
  };
  "/api/courses/{course_id}/topics/{topic_id}/tasks/{task_id}/answers/{answer_id}": {
    /** Get Answer */
    get: operations["get_answer_api_courses__course_id__topics__topic_id__tasks__task_id__answers__answer_id__get"];
    /** Delete Answer */
    delete: operations["delete_answer_api_courses__course_id__topics__topic_id__tasks__task_id__answers__answer_id__delete"];
    /** Patch Answer */
    patch: operations["patch_answer_api_courses__course_id__topics__topic_id__tasks__task_id__answers__answer_id__patch"];
  };
  "/api/subdivisions/": {
    /** Get Subdivisions */
    get: operations["get_subdivisions_api_subdivisions__get"];
    /** Create Subdivision */
    post: operations["create_subdivision_api_subdivisions__post"];
  };
  "/api/subdivisions/{subdivision_id}": {
    /** Get One Subdivision */
    get: operations["get_one_subdivision_api_subdivisions__subdivision_id__get"];
    /** Delete Subdivision */
    delete: operations["delete_subdivision_api_subdivisions__subdivision_id__delete"];
    /** Patch Subdivision */
    patch: operations["patch_subdivision_api_subdivisions__subdivision_id__patch"];
  };
  "/api/posts": {
    /** Get Posts */
    get: operations["get_posts_api_posts_get"];
    /** Create Post */
    post: operations["create_post_api_posts_post"];
  };
  "/api/subdivisions/{subdivision_id}/posts": {
    /** Get Subdivision Posts */
    get: operations["get_subdivision_posts_api_subdivisions__subdivision_id__posts_get"];
    /** Create Subdivision Post */
    post: operations["create_subdivision_post_api_subdivisions__subdivision_id__posts_post"];
  };
  "/api/subdivisions/{subdivision_id}/posts/{post_id}": {
    /** Get Subdivision Post */
    get: operations["get_subdivision_post_api_subdivisions__subdivision_id__posts__post_id__get"];
    /** Delete Subdivision Post */
    delete: operations["delete_subdivision_post_api_subdivisions__subdivision_id__posts__post_id__delete"];
    /** Update Subdivision Post */
    patch: operations["update_subdivision_post_api_subdivisions__subdivision_id__posts__post_id__patch"];
  };
  "/api/competencies/": {
    /** Get Competencies */
    get: operations["get_competencies_api_competencies__get"];
    /** Create Competence */
    post: operations["create_competence_api_competencies__post"];
  };
  "/api/competencies/{competence_id}": {
    /** Get Competence */
    get: operations["get_competence_api_competencies__competence_id__get"];
    /** Delete Competence */
    delete: operations["delete_competence_api_competencies__competence_id__delete"];
    /** Patch Competence */
    patch: operations["patch_competence_api_competencies__competence_id__patch"];
  };
  "/api/courses/{course_id}/topics/{topic_id}/resources/": {
    /** Get Resources */
    get: operations["get_resources_api_courses__course_id__topics__topic_id__resources__get"];
    /** Create Resource */
    post: operations["create_resource_api_courses__course_id__topics__topic_id__resources__post"];
  };
  "/api/courses/{course_id}/topics/{topic_id}/resources/{resource_id}": {
    /** Get One Resource */
    get: operations["get_one_resource_api_courses__course_id__topics__topic_id__resources__resource_id__get"];
    /** Delete Resource */
    delete: operations["delete_resource_api_courses__course_id__topics__topic_id__resources__resource_id__delete"];
    /** Patch Resource */
    patch: operations["patch_resource_api_courses__course_id__topics__topic_id__resources__resource_id__patch"];
  };
  "/api/courses/{course_id}/topics/{topic_id}/start_test": {
    /** Start Test */
    post: operations["start_test_api_courses__course_id__topics__topic_id__start_test_post"];
  };
  "/api/tests/{test_id}/finish": {
    /** Finish Test */
    post: operations["finish_test_api_tests__test_id__finish_post"];
  };
  "/api/tests/going": {
    /** Get Going Test */
    get: operations["get_going_test_api_tests_going_get"];
  };
  "/api/tests/{test_id}": {
    /** Get One User Test */
    get: operations["get_one_user_test_api_tests__test_id__get"];
  };
  "/api/tests": {
    /** Get User Tests */
    get: operations["get_user_tests_api_tests_get"];
  };
  "/api/reviews/": {
    /** Get Reviews */
    get: operations["get_reviews_api_reviews__get"];
  };
  "/api/reviews/{review_id}": {
    /** Get One Review */
    get: operations["get_one_review_api_reviews__review_id__get"];
    /** Finish Review */
    put: operations["finish_review_api_reviews__review_id__put"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** Answer */
    Answer: {
      /** Id */
      id: number;
      /** Value */
      value: string;
      /** Task Id */
      task_id: number;
    };
    /** AnswerAdmin */
    AnswerAdmin: {
      /** Id */
      id: number;
      /** Value */
      value: string;
      /** Is Correct */
      is_correct: boolean;
    };
    /** AssignInterns */
    AssignInterns: {
      /** Interns */
      interns: (number)[];
    };
    /** Body_login_for_access_token_api_auth_token_post */
    Body_login_for_access_token_api_auth_token_post: {
      /** Grant Type */
      grant_type?: string;
      /** Username */
      username: string;
      /** Password */
      password: string;
      /**
       * Scope 
       * @default
       */
      scope?: string;
      /** Client Id */
      client_id?: string;
      /** Client Secret */
      client_secret?: string;
    };
    /** Competence */
    Competence: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /** Course */
    Course: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /** CreateAnswer */
    CreateAnswer: {
      /** Value */
      value: string;
      /** Is Correct */
      is_correct: boolean;
    };
    /** CreateCompetence */
    CreateCompetence: {
      /** Name */
      name: string;
      /** Courses */
      courses: (number)[];
      /** Posts */
      posts: (number)[];
    };
    /** CreatePost */
    CreatePost: {
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Courses */
      courses: (number)[];
      /** Competencies */
      competencies: (number)[];
      /** Subdivision Id */
      subdivision_id: number;
    };
    /** CreateSubdivision */
    CreateSubdivision: {
      /** Name */
      name: string;
      /** Description */
      description: string;
    };
    /** CreateSubdivisionPost */
    CreateSubdivisionPost: {
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Courses */
      courses: (number)[];
      /** Competencies */
      competencies: (number)[];
    };
    /** CreateTask */
    CreateTask: {
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Prev Task Id */
      prev_task_id?: number;
      task_type: components["schemas"]["TaskType"];
    };
    /** CreateTopic */
    CreateTopic: {
      /** Name */
      name: string;
      /** Description */
      description: string;
      /**
       * Attempts Amount 
       * @default 3
       */
      attempts_amount?: number;
      /** Prev Topic Id */
      prev_topic_id?: number;
    };
    /** CreateTopicResource */
    CreateTopicResource: {
      type: components["schemas"]["TopicResourceType"];
      /** Name */
      name: string;
      /** Value */
      value: string;
      /** Prev Resource Id */
      prev_resource_id?: number;
    };
    /** CreateUser */
    CreateUser: {
      /** Email */
      email: string;
      /** Password */
      password: string;
      /**
       * First Name 
       * @default
       */
      first_name?: string;
      /**
       * Last Name 
       * @default
       */
      last_name?: string;
      /**
       * Patronymic 
       * @default
       */
      patronymic?: string;
      /**
       * Posts 
       * @default []
       */
      posts?: (number)[];
      /** Is Admin */
      is_admin: boolean;
      /** Is Teacher */
      is_teacher: boolean;
    };
    /** FinishReview */
    FinishReview: {
      /** Review */
      review?: string;
      /** Score */
      score: number;
    };
    /** FinishTestResponse */
    FinishTestResponse: {
      /**
       * Detail 
       * @default Test submitted.
       */
      detail?: string;
    };
    /** FkPost */
    FkPost: {
      /** Id */
      id: number;
      /** Subdivision Id */
      subdivision_id: number;
      /** Name */
      name: string;
    };
    /** FkTask */
    FkTask: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /** FkTopic */
    FkTopic: {
      /** Id */
      id: number;
      /** Course Id */
      course_id: number;
      /** Name */
      name: string;
    };
    /** FkTopicResource */
    FkTopicResource: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /** FkUser */
    FkUser: {
      /** Id */
      id: number;
      /** Email */
      email: string;
    };
    /** GoingTest */
    GoingTest: {
      /** Id */
      id: number;
      /**
       * Started At 
       * Format: date-time
       */
      started_at: string;
      /** Time To Pass */
      time_to_pass: number;
      /** Tasks */
      tasks: (components["schemas"]["backend__api__schemas__test_attempts__Task"])[];
      topic: components["schemas"]["FkTopic"];
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: (components["schemas"]["ValidationError"])[];
    };
    /** LimitOffsetPage[Competence] */
    LimitOffsetPage_Competence_: {
      /** Items */
      items: (components["schemas"]["Competence"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[Course] */
    LimitOffsetPage_Course_: {
      /** Items */
      items: (components["schemas"]["Course"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[FkUser] */
    LimitOffsetPage_FkUser_: {
      /** Items */
      items: (components["schemas"]["FkUser"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[ListReview] */
    LimitOffsetPage_ListReview_: {
      /** Items */
      items: (components["schemas"]["ListReview"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[ListTest] */
    LimitOffsetPage_ListTest_: {
      /** Items */
      items: (components["schemas"]["ListTest"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[ListTopicResource] */
    LimitOffsetPage_ListTopicResource_: {
      /** Items */
      items: (components["schemas"]["ListTopicResource"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[ListUser] */
    LimitOffsetPage_ListUser_: {
      /** Items */
      items: (components["schemas"]["ListUser"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[NamedUserCourse] */
    LimitOffsetPage_NamedUserCourse_: {
      /** Items */
      items: (components["schemas"]["NamedUserCourse"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[Post] */
    LimitOffsetPage_Post_: {
      /** Items */
      items: (components["schemas"]["Post"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[SubdivisionPost] */
    LimitOffsetPage_SubdivisionPost_: {
      /** Items */
      items: (components["schemas"]["SubdivisionPost"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[Subdivision] */
    LimitOffsetPage_Subdivision_: {
      /** Items */
      items: (components["schemas"]["Subdivision"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[Task] */
    LimitOffsetPage_Task_: {
      /** Items */
      items: (components["schemas"]["backend__api__schemas__tasks__Task"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[Topic] */
    LimitOffsetPage_Topic_: {
      /** Items */
      items: (components["schemas"]["Topic"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[Union[AnswerAdmin, Answer]] */
    LimitOffsetPage_Union_AnswerAdmin__Answer__: {
      /** Items */
      items: (components["schemas"]["AnswerAdmin"] | components["schemas"]["Answer"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** ListReview */
    ListReview: {
      /** Id */
      id: number;
      /** Task Name */
      task_name: string;
      status: components["schemas"]["UserAnswerStatus"];
    };
    /** ListTest */
    ListTest: {
      /** Id */
      id: number;
      course: components["schemas"]["Course"];
      topic: components["schemas"]["FkTopic"];
      status: components["schemas"]["TestAttemptStatus"];
    };
    /** ListTopicResource */
    ListTopicResource: {
      /** Id */
      id: number;
      type: components["schemas"]["TopicResourceType"];
      /** Name */
      name: string;
      /** Value */
      value: string;
    };
    /** ListUser */
    ListUser: {
      /** Id */
      id: number;
      /** Email */
      email: string;
      /** First Name */
      first_name: string;
      /** Last Name */
      last_name: string;
      /** Patronymic */
      patronymic: string;
      /** Is Admin */
      is_admin: boolean;
      /** Is Teacher */
      is_teacher: boolean;
    };
    /** NamedUserCourse */
    NamedUserCourse: {
      /** Id */
      id: number;
      /** User Id */
      user_id: number;
      /** Course Id */
      course_id: number;
      /** Progress */
      progress: number;
      /**
       * Admission Date 
       * Format: date-time
       */
      admission_date: string;
      /** Course Name */
      course_name: string;
    };
    /** OneCompetence */
    OneCompetence: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Courses */
      courses: (components["schemas"]["Course"])[];
      /** Posts */
      posts: (components["schemas"]["Post"])[];
    };
    /** OneCourse */
    OneCourse: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Posts */
      posts: (components["schemas"]["FkPost"])[];
      /** Competencies */
      competencies: (components["schemas"]["backend__api__schemas__courses__FkCompetence"])[];
    };
    /** OneSubdivision */
    OneSubdivision: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Description */
      description: string;
    };
    /** OneSubdivisionPost */
    OneSubdivisionPost: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Courses */
      courses: (components["schemas"]["Course"])[];
      /** Competencies */
      competencies: (components["schemas"]["backend__api__schemas__posts__FkCompetence"])[];
    };
    /** OneTask */
    OneTask: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Description */
      description: string;
      prev_task?: components["schemas"]["FkTask"];
      next_task?: components["schemas"]["FkTask"];
      task_type: components["schemas"]["TaskType"];
    };
    /** OneTest */
    OneTest: {
      /** Id */
      id: number;
      course: components["schemas"]["Course"];
      topic: components["schemas"]["FkTopic"];
      status: components["schemas"]["TestAttemptStatus"];
      /** Score */
      score: number;
      /** Max Score */
      max_score: number;
      /**
       * Started At 
       * Format: date-time
       */
      started_at: string;
      /**
       * Finished At 
       * Format: date-time
       */
      finished_at?: string;
      /** User Answers */
      user_answers: (components["schemas"]["SavedUserAnswer"])[];
    };
    /** OneTopic */
    OneTopic: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Attempts Amount */
      attempts_amount: number;
      prev_topic?: components["schemas"]["Topic"];
      next_topic?: components["schemas"]["Topic"];
    };
    /** OneTopicResource */
    OneTopicResource: {
      /** Id */
      id: number;
      type: components["schemas"]["TopicResourceType"];
      /** Name */
      name: string;
      /** Value */
      value: string;
      prev_resource?: components["schemas"]["FkTopicResource"];
      next_resource?: components["schemas"]["FkTopicResource"];
    };
    /** OneUserCourse */
    OneUserCourse: {
      /** Id */
      id: number;
      /** User Id */
      user_id: number;
      /** Course Id */
      course_id: number;
      /** Progress */
      progress: number;
      /**
       * Admission Date 
       * Format: date-time
       */
      admission_date: string;
      /** Course Name */
      course_name: string;
      /** Course Description */
      course_description: string;
      /** Posts */
      posts: (components["schemas"]["FkPost"])[];
      /** Competencies */
      competencies: (components["schemas"]["backend__api__schemas__courses__FkCompetence"])[];
    };
    /** PatchAnswer */
    PatchAnswer: {
      /** Value */
      value?: string;
      /** Is Correct */
      is_correct?: boolean;
    };
    /** PatchCompetence */
    PatchCompetence: {
      /** Name */
      name?: string;
      /** Courses */
      courses?: (number)[];
      /** Posts */
      posts?: (number)[];
    };
    /** PatchCourse */
    PatchCourse: {
      /** Name */
      name?: string;
      /** Description */
      description?: string;
      /** Posts */
      posts?: (number)[];
      /** Competencies */
      competencies?: (number)[];
    };
    /** PatchSubdivision */
    PatchSubdivision: {
      /** Name */
      name?: string;
      /** Description */
      description?: string;
    };
    /** PatchSubdivisionPost */
    PatchSubdivisionPost: {
      /** Name */
      name?: string;
      /** Description */
      description?: string;
      /** Courses */
      courses?: (number)[];
      /** Competencies */
      competencies?: (number)[];
    };
    /** PatchTask */
    PatchTask: {
      /** Name */
      name?: string;
      /** Description */
      description?: string;
      /** Prev Task Id */
      prev_task_id?: number;
    };
    /** PatchTopic */
    PatchTopic: {
      /** Name */
      name?: string;
      /** Description */
      description?: string;
      /** Attempts Amount */
      attempts_amount?: number;
      /** Prev Topic Id */
      prev_topic_id?: number;
      /** Next Topic Id */
      next_topic_id?: number;
    };
    /** PatchTopicResource */
    PatchTopicResource: {
      /** Name */
      name?: string;
      /** Value */
      value?: string;
      /** Prev Resource Id */
      prev_resource_id?: number;
    };
    /** PatchUser */
    PatchUser: {
      /** Email */
      email?: string;
      /** First Name */
      first_name?: string;
      /** Last Name */
      last_name?: string;
      /** Patronymic */
      patronymic?: string;
      /** Posts */
      posts?: (number)[];
    };
    /** PossibleAnswer */
    PossibleAnswer: {
      /** Id */
      id: number;
      /** Value */
      value: string;
    };
    /** Post */
    Post: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Subdivision Id */
      subdivision_id: number;
    };
    /** Review */
    Review: {
      /** Id */
      id: number;
      /** Task Name */
      task_name: string;
      status: components["schemas"]["UserAnswerStatus"];
      /** Task Description */
      task_description: string;
      /** Review */
      review?: string;
      /** Value */
      value: string | (string)[];
      /** Score */
      score: number;
      /** Max Score */
      max_score: number;
    };
    /** SavedUserAnswer */
    SavedUserAnswer: {
      /** Id */
      id: number;
      /** Task Name */
      task_name: string;
      /** Task Description */
      task_description: string;
      task_type: components["schemas"]["TaskType"];
      /** Value */
      value: string | (string)[];
      /** Score */
      score: number;
      /** Max Score */
      max_score: number;
      status: components["schemas"]["UserAnswerStatus"];
      /** Review */
      review?: string;
    };
    /** Subdivision */
    Subdivision: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /** SubdivisionPost */
    SubdivisionPost: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /**
     * TaskType 
     * @description An enumeration. 
     * @enum {unknown}
     */
    TaskType: "single" | "multiple" | "text";
    /**
     * TestAttemptStatus 
     * @description An enumeration. 
     * @enum {unknown}
     */
    TestAttemptStatus: "in_progress" | "system_checking" | "timeout_failure" | "check_failure" | "partially_checked" | "checked";
    /** Token */
    Token: {
      /** Access Token */
      access_token: string;
      /** Token Type */
      token_type: string;
    };
    /** Topic */
    Topic: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /**
     * TopicResourceType 
     * @description An enumeration. 
     * @enum {unknown}
     */
    TopicResourceType: "text" | "image" | "video" | "embedded";
    /** User */
    User: {
      /** Id */
      id: number;
      /** Email */
      email: string;
      /** First Name */
      first_name: string;
      /** Last Name */
      last_name: string;
      /** Patronymic */
      patronymic: string;
      /** Is Admin */
      is_admin: boolean;
      /** Is Teacher */
      is_teacher: boolean;
      /** Posts */
      posts: (components["schemas"]["Post"])[];
      teacher?: components["schemas"]["FkUser"];
    };
    /** UserAnswer */
    UserAnswer: {
      /** Task Id */
      task_id: number;
      /** Answer */
      answer: number | (number)[] | string;
    };
    /**
     * UserAnswerStatus 
     * @description An enumeration. 
     * @enum {unknown}
     */
    UserAnswerStatus: "checked" | "unchecked";
    /** UserCourse */
    UserCourse: {
      /** Id */
      id: number;
      /** User Id */
      user_id: number;
      /** Course Id */
      course_id: number;
      /** Progress */
      progress: number;
      /**
       * Admission Date 
       * Format: date-time
       */
      admission_date: string;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
    /** CreateCourse */
    backend__api__schemas__courses__CreateCourse: {
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Posts */
      posts: (number)[];
      /** Competencies */
      competencies: (number)[];
    };
    /** FkCompetence */
    backend__api__schemas__courses__FkCompetence: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /** FkCompetence */
    backend__api__schemas__posts__FkCompetence: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /** Task */
    backend__api__schemas__tasks__Task: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      task_type: components["schemas"]["TaskType"];
    };
    /** Task */
    backend__api__schemas__test_attempts__Task: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Description */
      description: string;
      task_type: components["schemas"]["TaskType"];
      /** Possible Answers */
      possible_answers?: (components["schemas"]["PossibleAnswer"])[];
    };
    /** CreateCourse */
    backend__api__schemas__user_courses__CreateCourse: {
      /** Course Id */
      course_id: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** Get Courses */
  get_courses_api_courses__get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_Course_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Course */
  create_course_api_courses__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["backend__api__schemas__courses__CreateCourse"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneCourse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Course */
  get_course_api_courses__course_id__get: {
    parameters: {
      path: {
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneCourse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Course */
  delete_course_api_courses__course_id__delete: {
    parameters: {
      path: {
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Patch Course */
  patch_course_api_courses__course_id__patch: {
    parameters: {
      path: {
        course_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchCourse"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneCourse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Login For Access Token */
  login_for_access_token_api_auth_token_post: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Body_login_for_access_token_api_auth_token_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Token"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Users Me */
  get_users_me_api_users_me_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  /** Get Users */
  get_users_api_users_get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
        role?: "admin" | "teacher" | "intern";
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_ListUser_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create User */
  create_user_api_users_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUser"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User */
  get_user_api_users__user_id__get: {
    parameters: {
      path: {
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Patch User */
  patch_user_api_users__user_id__patch: {
    parameters: {
      path: {
        user_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchUser"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Assigned Interns */
  get_assigned_interns_api_users__teacher_id__assigned_interns_get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
      path: {
        teacher_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_ListUser_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Assign Interns */
  assign_interns_api_users__teacher_id__assigned_interns_put: {
    parameters: {
      path: {
        teacher_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AssignInterns"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AssignInterns"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get One Assigned Intern */
  get_one_assigned_intern_api_users__teacher_id__assigned_interns__intern_id__get: {
    parameters: {
      path: {
        intern_id: number;
        teacher_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Unassign Intern */
  unassign_intern_api_users__intern_id__delete: {
    parameters: {
      path: {
        intern_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Suitable For Assign Interns */
  get_suitable_for_assign_interns_api_users__teacher_id__suitable_for_assign_interns_get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
      path: {
        teacher_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_FkUser_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Courses */
  get_user_courses_api_user__user_id__courses__get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
      path: {
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_NamedUserCourse_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create User Course */
  create_user_course_api_user__user_id__courses__post: {
    parameters: {
      path: {
        user_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["backend__api__schemas__user_courses__CreateCourse"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserCourse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get One User Course */
  get_one_user_course_api_user__user_id__courses__course_id__get: {
    parameters: {
      path: {
        course_id: number;
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneUserCourse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete User Course */
  delete_user_course_api_user__user_id__courses__course_id__delete: {
    parameters: {
      path: {
        course_id: number;
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Topics */
  get_topics_api_courses__course_id__topics__get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
      path: {
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_Topic_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Topic */
  create_topic_api_courses__course_id__topics__post: {
    parameters: {
      path: {
        course_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateTopic"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneTopic"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Topic */
  get_topic_api_courses__course_id__topics__topic_id__get: {
    parameters: {
      path: {
        topic_id: number;
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneTopic"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Topic */
  delete_topic_api_courses__course_id__topics__topic_id__delete: {
    parameters: {
      path: {
        topic_id: number;
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Patch Topic */
  patch_topic_api_courses__course_id__topics__topic_id__patch: {
    parameters: {
      path: {
        topic_id: number;
        course_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchTopic"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneTopic"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Tasks */
  get_tasks_api_courses__course_id__topics__topic_id__tasks__get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
      path: {
        topic_id: number;
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_Task_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Task */
  create_task_api_courses__course_id__topics__topic_id__tasks__post: {
    parameters: {
      path: {
        topic_id: number;
        course_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateTask"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneTask"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Task */
  get_task_api_courses__course_id__topics__topic_id__tasks__task_id__get: {
    parameters: {
      path: {
        task_id: number;
        topic_id: number;
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneTask"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Task */
  delete_task_api_courses__course_id__topics__topic_id__tasks__task_id__delete: {
    parameters: {
      path: {
        task_id: number;
        topic_id: number;
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Patch Task */
  patch_task_api_courses__course_id__topics__topic_id__tasks__task_id__patch: {
    parameters: {
      path: {
        task_id: number;
        topic_id: number;
        course_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchTask"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneTask"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Answers */
  get_answers_api_courses__course_id__topics__topic_id__tasks__task_id__answers__get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
      path: {
        task_id: number;
        topic_id: number;
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_Union_AnswerAdmin__Answer__"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Answer */
  create_answer_api_courses__course_id__topics__topic_id__tasks__task_id__answers__post: {
    parameters: {
      path: {
        task_id: number;
        topic_id: number;
        course_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateAnswer"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AnswerAdmin"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Answer */
  get_answer_api_courses__course_id__topics__topic_id__tasks__task_id__answers__answer_id__get: {
    parameters: {
      path: {
        answer_id: number;
        task_id: number;
        topic_id: number;
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AnswerAdmin"] | components["schemas"]["Answer"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Answer */
  delete_answer_api_courses__course_id__topics__topic_id__tasks__task_id__answers__answer_id__delete: {
    parameters: {
      path: {
        answer_id: number;
        task_id: number;
        topic_id: number;
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Patch Answer */
  patch_answer_api_courses__course_id__topics__topic_id__tasks__task_id__answers__answer_id__patch: {
    parameters: {
      path: {
        answer_id: number;
        task_id: number;
        topic_id: number;
        course_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchAnswer"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AnswerAdmin"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Subdivisions */
  get_subdivisions_api_subdivisions__get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_Subdivision_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Subdivision */
  create_subdivision_api_subdivisions__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateSubdivision"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneSubdivision"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get One Subdivision */
  get_one_subdivision_api_subdivisions__subdivision_id__get: {
    parameters: {
      path: {
        subdivision_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneSubdivision"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Subdivision */
  delete_subdivision_api_subdivisions__subdivision_id__delete: {
    parameters: {
      path: {
        subdivision_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Patch Subdivision */
  patch_subdivision_api_subdivisions__subdivision_id__patch: {
    parameters: {
      path: {
        subdivision_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchSubdivision"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneSubdivision"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Posts */
  get_posts_api_posts_get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_Post_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Post */
  create_post_api_posts_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePost"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Post"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Subdivision Posts */
  get_subdivision_posts_api_subdivisions__subdivision_id__posts_get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
      path: {
        subdivision_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_SubdivisionPost_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Subdivision Post */
  create_subdivision_post_api_subdivisions__subdivision_id__posts_post: {
    parameters: {
      path: {
        subdivision_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateSubdivisionPost"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneSubdivisionPost"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Subdivision Post */
  get_subdivision_post_api_subdivisions__subdivision_id__posts__post_id__get: {
    parameters: {
      path: {
        subdivision_id: number;
        post_id: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneSubdivisionPost"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Subdivision Post */
  delete_subdivision_post_api_subdivisions__subdivision_id__posts__post_id__delete: {
    parameters: {
      path: {
        subdivision_id: number;
        post_id: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Subdivision Post */
  update_subdivision_post_api_subdivisions__subdivision_id__posts__post_id__patch: {
    parameters: {
      path: {
        subdivision_id: number;
        post_id: unknown;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchSubdivisionPost"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneSubdivisionPost"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Competencies */
  get_competencies_api_competencies__get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_Competence_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Competence */
  create_competence_api_competencies__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateCompetence"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneCompetence"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Competence */
  get_competence_api_competencies__competence_id__get: {
    parameters: {
      path: {
        competence_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneCompetence"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Competence */
  delete_competence_api_competencies__competence_id__delete: {
    parameters: {
      path: {
        competence_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Patch Competence */
  patch_competence_api_competencies__competence_id__patch: {
    parameters: {
      path: {
        competence_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchCompetence"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneCompetence"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Resources */
  get_resources_api_courses__course_id__topics__topic_id__resources__get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
      path: {
        topic_id: number;
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_ListTopicResource_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Resource */
  create_resource_api_courses__course_id__topics__topic_id__resources__post: {
    parameters: {
      path: {
        topic_id: number;
        course_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateTopicResource"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneTopicResource"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get One Resource */
  get_one_resource_api_courses__course_id__topics__topic_id__resources__resource_id__get: {
    parameters: {
      path: {
        resource_id: number;
        topic_id: number;
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneTopicResource"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Resource */
  delete_resource_api_courses__course_id__topics__topic_id__resources__resource_id__delete: {
    parameters: {
      path: {
        resource_id: number;
        topic_id: number;
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Patch Resource */
  patch_resource_api_courses__course_id__topics__topic_id__resources__resource_id__patch: {
    parameters: {
      path: {
        resource_id: number;
        topic_id: number;
        course_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchTopicResource"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneTopicResource"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Start Test */
  start_test_api_courses__course_id__topics__topic_id__start_test_post: {
    parameters: {
      path: {
        topic_id: number;
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GoingTest"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Finish Test */
  finish_test_api_tests__test_id__finish_post: {
    parameters: {
      path: {
        test_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": (components["schemas"]["UserAnswer"])[];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FinishTestResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Going Test */
  get_going_test_api_tests_going_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GoingTest"];
        };
      };
    };
  };
  /** Get One User Test */
  get_one_user_test_api_tests__test_id__get: {
    parameters: {
      path: {
        test_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneTest"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Tests */
  get_user_tests_api_tests_get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
        status?: components["schemas"]["TestAttemptStatus"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_ListTest_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Reviews */
  get_reviews_api_reviews__get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
        status?: components["schemas"]["UserAnswerStatus"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_ListReview_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get One Review */
  get_one_review_api_reviews__review_id__get: {
    parameters: {
      path: {
        review_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Review"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Finish Review */
  finish_review_api_reviews__review_id__put: {
    parameters: {
      path: {
        review_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FinishReview"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Review"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
