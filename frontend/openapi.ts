/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/courses/": {
    /** Get Courses */
    get: operations["get_courses_api_courses__get"];
    /** Create Course */
    post: operations["create_course_api_courses__post"];
  };
  "/api/courses/{course_id}": {
    /** Get Course */
    get: operations["get_course_api_courses__course_id__get"];
    /** Delete Course */
    delete: operations["delete_course_api_courses__course_id__delete"];
    /** Patch Course */
    patch: operations["patch_course_api_courses__course_id__patch"];
  };
  "/api/auth/token": {
    /** Login For Access Token */
    post: operations["login_for_access_token_api_auth_token_post"];
  };
  "/api/users/me": {
    /** Get Users Me */
    get: operations["get_users_me_api_users_me_get"];
  };
  "/api/users": {
    /** Get Users */
    get: operations["get_users_api_users_get"];
  };
  "/api/users/{user_id}": {
    /** Get User */
    get: operations["get_user_api_users__user_id__get"];
    /** Patch User */
    patch: operations["patch_user_api_users__user_id__patch"];
  };
  "/api/user/{user_id}/courses/": {
    /** Get User Courses */
    get: operations["get_user_courses_api_user__user_id__courses__get"];
    /** Create User Course */
    post: operations["create_user_course_api_user__user_id__courses__post"];
  };
  "/api/user/{user_id}/courses/{course_id}": {
    /** Get One User Course */
    get: operations["get_one_user_course_api_user__user_id__courses__course_id__get"];
    /** Delete User Course */
    delete: operations["delete_user_course_api_user__user_id__courses__course_id__delete"];
  };
  "/api/subdivisions/": {
    /** Get Subdivisions */
    get: operations["get_subdivisions_api_subdivisions__get"];
    /** Create Subdivision */
    post: operations["create_subdivision_api_subdivisions__post"];
  };
  "/api/subdivisions/{subdivision_id}": {
    /** Get One Subdivision */
    get: operations["get_one_subdivision_api_subdivisions__subdivision_id__get"];
    /** Delete Subdivision */
    delete: operations["delete_subdivision_api_subdivisions__subdivision_id__delete"];
    /** Patch Subdivision */
    patch: operations["patch_subdivision_api_subdivisions__subdivision_id__patch"];
  };
  "/api/posts": {
    /** Get Posts */
    get: operations["get_posts_api_posts_get"];
  };
  "/api/subdivisions/{subdivision_id}/posts": {
    /** Get Subdivision Posts */
    get: operations["get_subdivision_posts_api_subdivisions__subdivision_id__posts_get"];
    /** Create Subdivision Post */
    post: operations["create_subdivision_post_api_subdivisions__subdivision_id__posts_post"];
  };
  "/api/subdivisions/{subdivision_id}/posts/{post_id}": {
    /** Get Subdivision Post */
    get: operations["get_subdivision_post_api_subdivisions__subdivision_id__posts__post_id__get"];
    /** Delete Subdivision Post */
    delete: operations["delete_subdivision_post_api_subdivisions__subdivision_id__posts__post_id__delete"];
    /** Update Subdivision Post */
    patch: operations["update_subdivision_post_api_subdivisions__subdivision_id__posts__post_id__patch"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** Body_login_for_access_token_api_auth_token_post */
    Body_login_for_access_token_api_auth_token_post: {
      /** Grant Type */
      grant_type?: string;
      /** Username */
      username: string;
      /** Password */
      password: string;
      /**
       * Scope 
       * @default
       */
      scope?: string;
      /** Client Id */
      client_id?: string;
      /** Client Secret */
      client_secret?: string;
    };
    /** Course */
    Course: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /** CreateSubdivision */
    CreateSubdivision: {
      /** Name */
      name: string;
      /** Description */
      description: string;
    };
    /** CreateSubdivisionPost */
    CreateSubdivisionPost: {
      /** Name */
      name: string;
      /** Description */
      description: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: (components["schemas"]["ValidationError"])[];
    };
    /** LimitOffsetPage[Course] */
    LimitOffsetPage_Course_: {
      /** Items */
      items: (components["schemas"]["Course"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[ListUser] */
    LimitOffsetPage_ListUser_: {
      /** Items */
      items: (components["schemas"]["ListUser"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[NamedUserCourse] */
    LimitOffsetPage_NamedUserCourse_: {
      /** Items */
      items: (components["schemas"]["NamedUserCourse"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[Post] */
    LimitOffsetPage_Post_: {
      /** Items */
      items: (components["schemas"]["Post"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[SubdivisionPost] */
    LimitOffsetPage_SubdivisionPost_: {
      /** Items */
      items: (components["schemas"]["SubdivisionPost"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** LimitOffsetPage[Subdivision] */
    LimitOffsetPage_Subdivision_: {
      /** Items */
      items: (components["schemas"]["Subdivision"])[];
      /** Total */
      total: number;
      /** Limit */
      limit?: number;
      /** Offset */
      offset?: number;
    };
    /** ListUser */
    ListUser: {
      /** Id */
      id: number;
      /** Email */
      email: string;
      /** First Name */
      first_name: string;
      /** Last Name */
      last_name: string;
      /** Patronymic */
      patronymic: string;
      /** Is Admin */
      is_admin: boolean;
      /** Is Teacher */
      is_teacher: boolean;
    };
    /** NamedUserCourse */
    NamedUserCourse: {
      /** Id */
      id: number;
      /** User Id */
      user_id: number;
      /** Course Id */
      course_id: number;
      /** Progress */
      progress: number;
      /**
       * Admission Date 
       * Format: date-time
       */
      admission_date: string;
      /** Course Name */
      course_name: string;
    };
    /** OneCourse */
    OneCourse: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Description */
      description: string;
    };
    /** OneSubdivision */
    OneSubdivision: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Description */
      description: string;
    };
    /** OneSubdivisionPost */
    OneSubdivisionPost: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Description */
      description: string;
    };
    /** OneUserCourse */
    OneUserCourse: {
      /** Id */
      id: number;
      /** User Id */
      user_id: number;
      /** Course Id */
      course_id: number;
      /** Progress */
      progress: number;
      /**
       * Admission Date 
       * Format: date-time
       */
      admission_date: string;
      /** Course Name */
      course_name: string;
      /** Course Description */
      course_description: string;
    };
    /** PatchCourse */
    PatchCourse: {
      /** Name */
      name?: string;
      /** Description */
      description?: string;
    };
    /** PatchSubdivision */
    PatchSubdivision: {
      /** Name */
      name?: string;
      /** Description */
      description?: string;
    };
    /** PatchSubdivisionPost */
    PatchSubdivisionPost: {
      /** Name */
      name?: string;
      /** Description */
      description?: string;
    };
    /** PatchUser */
    PatchUser: {
      /** Email */
      email?: string;
      /** First Name */
      first_name?: string;
      /** Last Name */
      last_name?: string;
      /** Patronymic */
      patronymic?: string;
      /** Posts */
      posts?: (number)[];
    };
    /** Post */
    Post: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Subdivision Id */
      subdivision_id: number;
    };
    /** Subdivision */
    Subdivision: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /** SubdivisionPost */
    SubdivisionPost: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /** Token */
    Token: {
      /** Access Token */
      access_token: string;
      /** Token Type */
      token_type: string;
    };
    /** User */
    User: {
      /** Id */
      id: number;
      /** Email */
      email: string;
      /** First Name */
      first_name: string;
      /** Last Name */
      last_name: string;
      /** Patronymic */
      patronymic: string;
      /** Is Admin */
      is_admin: boolean;
      /** Is Teacher */
      is_teacher: boolean;
      /** Posts */
      posts: (components["schemas"]["SubdivisionPost"])[];
    };
    /** UserCourse */
    UserCourse: {
      /** Id */
      id: number;
      /** User Id */
      user_id: number;
      /** Course Id */
      course_id: number;
      /** Progress */
      progress: number;
      /**
       * Admission Date 
       * Format: date-time
       */
      admission_date: string;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
    /** CreateCourse */
    backend__api__schemas__courses__CreateCourse: {
      /** Name */
      name: string;
      /** Description */
      description: string;
    };
    /** CreateCourse */
    backend__api__schemas__user_courses__CreateCourse: {
      /** Course Id */
      course_id: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** Get Courses */
  get_courses_api_courses__get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_Course_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Course */
  create_course_api_courses__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["backend__api__schemas__courses__CreateCourse"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneCourse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Course */
  get_course_api_courses__course_id__get: {
    parameters: {
      path: {
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneCourse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Course */
  delete_course_api_courses__course_id__delete: {
    parameters: {
      path: {
        course_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Patch Course */
  patch_course_api_courses__course_id__patch: {
    parameters: {
      path: {
        course_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchCourse"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneCourse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Login For Access Token */
  login_for_access_token_api_auth_token_post: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Body_login_for_access_token_api_auth_token_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Token"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Users Me */
  get_users_me_api_users_me_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  /** Get Users */
  get_users_api_users_get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_ListUser_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User */
  get_user_api_users__user_id__get: {
    parameters: {
      path: {
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Patch User */
  patch_user_api_users__user_id__patch: {
    parameters: {
      path: {
        user_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchUser"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Courses */
  get_user_courses_api_user__user_id__courses__get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
      path: {
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_NamedUserCourse_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create User Course */
  create_user_course_api_user__user_id__courses__post: {
    parameters: {
      path: {
        user_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["backend__api__schemas__user_courses__CreateCourse"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserCourse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get One User Course */
  get_one_user_course_api_user__user_id__courses__course_id__get: {
    parameters: {
      path: {
        course_id: number;
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneUserCourse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete User Course */
  delete_user_course_api_user__user_id__courses__course_id__delete: {
    parameters: {
      path: {
        course_id: number;
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Subdivisions */
  get_subdivisions_api_subdivisions__get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_Subdivision_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Subdivision */
  create_subdivision_api_subdivisions__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateSubdivision"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneSubdivision"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get One Subdivision */
  get_one_subdivision_api_subdivisions__subdivision_id__get: {
    parameters: {
      path: {
        subdivision_id: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneSubdivision"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Subdivision */
  delete_subdivision_api_subdivisions__subdivision_id__delete: {
    parameters: {
      path: {
        subdivision_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Patch Subdivision */
  patch_subdivision_api_subdivisions__subdivision_id__patch: {
    parameters: {
      path: {
        subdivision_id: unknown;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchSubdivision"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneSubdivision"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Posts */
  get_posts_api_posts_get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_Post_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Subdivision Posts */
  get_subdivision_posts_api_subdivisions__subdivision_id__posts_get: {
    parameters: {
      query: {
        limit?: number;
        offset?: number;
        search?: string;
      };
      path: {
        subdivision_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LimitOffsetPage_SubdivisionPost_"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Subdivision Post */
  create_subdivision_post_api_subdivisions__subdivision_id__posts_post: {
    parameters: {
      path: {
        subdivision_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateSubdivisionPost"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneSubdivisionPost"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Subdivision Post */
  get_subdivision_post_api_subdivisions__subdivision_id__posts__post_id__get: {
    parameters: {
      path: {
        subdivision_id: number;
        post_id: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneSubdivisionPost"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Subdivision Post */
  delete_subdivision_post_api_subdivisions__subdivision_id__posts__post_id__delete: {
    parameters: {
      path: {
        subdivision_id: number;
        post_id: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Subdivision Post */
  update_subdivision_post_api_subdivisions__subdivision_id__posts__post_id__patch: {
    parameters: {
      path: {
        subdivision_id: number;
        post_id: unknown;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchSubdivisionPost"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["OneSubdivisionPost"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
